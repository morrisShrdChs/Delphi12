unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, Grids;

type
  TForm1 = class(TForm)
    StringGrid1: TStringGrid;
    ButtonFillMatrix: TButton;
    ButtonSwapRows: TButton;
    LabelResult: TLabel;
    procedure ButtonFillMatrixClick(Sender: TObject);
    procedure ButtonSwapRowsClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.ButtonFillMatrixClick(Sender: TObject);
var
  i, j: Integer;
begin
  Randomize;
  for i := 0 to StringGrid1.RowCount - 1 do
    for j := 0 to StringGrid1.ColCount - 1 do
      StringGrid1.Cells[j, i] := IntToStr(Random(100));
end;

procedure TForm1.ButtonSwapRowsClick(Sender: TObject);
var
  i, j: Integer;
  maxVal, minVal: Integer;
  maxRow, minRow: Integer;
  temp: string;
begin
  maxVal := StrToInt(StringGrid1.Cells[0, 0]);
  minVal := StrToInt(StringGrid1.Cells[0, 0]);
  maxRow := 0;
  minRow := 0;

  for i := 0 to StringGrid1.RowCount - 1 do
    for j := 0 to StringGrid1.ColCount - 1 do
    begin
      if StrToInt(StringGrid1.Cells[j, i]) > maxVal then
      begin
        maxVal := StrToInt(StringGrid1.Cells[j, i]);
        maxRow := i;
      end;
      if StrToInt(StringGrid1.Cells[j, i]) < minVal then
      begin
        minVal := StrToInt(StringGrid1.Cells[j, i]);
        minRow := i;
      end;
    end;

  if maxRow <> minRow then
  begin
    for j := 0 to StringGrid1.ColCount - 1 do
    begin
      temp := StringGrid1.Cells[j, maxRow];
      StringGrid1.Cells[j, maxRow] := StringGrid1.Cells[j, minRow];
      StringGrid1.Cells[j, minRow] := temp;
    end;
  end;

  LabelResult.Caption := 'Макс. элемент в строке: ' + IntToStr(maxRow + 1) +
                        ', Мин. элемент в строке: ' + IntToStr(minRow + 1);
end;

end.

